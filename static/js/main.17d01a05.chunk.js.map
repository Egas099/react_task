{"version":3,"sources":["types/users.ts","context/index.ts","store/userReduser.ts","components/Loader.tsx","hooks/useTypedSelector.ts","components/UserItem.tsx","components/UserList.tsx","App.tsx","store/index.ts","index.tsx"],"names":["UserActionType","Context","React","createContext","defaultState","users","usersExist","Loader","dispatch","useDispatch","setFileName","useContext","useState","isOver","setIsOver","loading","setLoading","className","join","onDrop","e","preventDefault","stopPropagation","dataTransfer","files","name","reader","FileReader","onloadend","response","result","alert","JSON","parse","error","payload","sortingUsers","reply","Set","checkReplyings","newReplyings","replying","user","add","replies","newReplying","push","length","Array","from","extractUsers","sort","type","IMPORT_USERS","readAsText","onDragOver","onDragEnter","onDragLeave","useTypedSelector","useSelector","UserItem","even","dispath","onClick","REMOVE_USER","UserList","map","index","style","textAlign","App","state","fileName","Provider","value","rootReducer","combineReducers","action","filter","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17d01a05.chunk.js","sourcesContent":["export interface UsersState {\r\n    users: string[];\r\n    usersExist: boolean;\r\n}\r\n\r\nexport enum UserActionType {\r\n    IMPORT_USERS = 'IMPORT_USERS',\r\n    REMOVE_USER = 'REMOVE_USER',\r\n}\r\n\r\ninterface ImportUsersAction {\r\n    type: UserActionType.IMPORT_USERS;\r\n    payload: string[];\r\n}\r\ninterface RemoveUserAction {\r\n    type: UserActionType.REMOVE_USER;\r\n    payload: String;\r\n}\r\n\r\nexport type UserAction = ImportUsersAction | RemoveUserAction;","import React from 'react'\r\n\r\nexport const Context = React.createContext<any>({})","import { UserAction, UserActionType, UsersState } from '../types/users';\r\n\r\n\r\nconst defaultState: UsersState = {\r\n    users: [],\r\n    usersExist: false,\r\n}\r\n\r\nexport const userReduser = (state = defaultState, action: UserAction): UsersState => {\r\n    switch (action.type) {\r\n        case UserActionType.IMPORT_USERS:\r\n            return { ...state, users: action.payload, usersExist: true };\r\n        case UserActionType.REMOVE_USER:\r\n            return { ...state, users: state.users.filter(user => user !== action.payload) };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addUsers = (payload: string[]) => ({ type: UserActionType.IMPORT_USERS, payload })\r\nexport const removeUser = (payload: String) => ({ type: UserActionType.REMOVE_USER, payload })","import React, { useState, useContext, FC } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Context } from '../context'\r\nimport { addUsers } from '../store/userReduser';\r\nimport { Replying } from '../types/replying';\r\n\r\nconst Loader: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { setFileName } = useContext(Context);\r\n\r\n    const [isOver, setIsOver] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function onDrop(e: React.DragEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setFileName(e.dataTransfer.files[0].name);\r\n\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            let response: any = '';\r\n            try {\r\n                response = reader.result;\r\n                if (typeof response === 'string')\r\n                    response = JSON.parse(response);\r\n                else {\r\n                    alert('Unable to read the file');\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n            } catch (error) {\r\n                alert('Unable to read JSON file. Probably the file has a different format.');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            setLoading(false);\r\n            const sortingUsers = extractUsers(response).sort();\r\n            dispatch(addUsers(sortingUsers))\r\n        };\r\n        reader.readAsText(e.dataTransfer.files[0]);\r\n\r\n        setLoading(true);\r\n        setIsOver(false);\r\n    }\r\n    function extractUsers(reply: Replying): string[] {\r\n        let users: Set<string> = new Set();\r\n        let checkReplyings: Replying[] = [];\r\n        let newReplyings: Replying[] = [reply];\r\n        do {\r\n            checkReplyings = newReplyings;\r\n            newReplyings = [];\r\n            for (const replying of checkReplyings) {\r\n                if (replying.user)\r\n                    users.add(replying.user);\r\n                if (replying.replies)\r\n                    for (const newReplying of replying.replies)\r\n                        newReplyings.push(newReplying);\r\n            }\r\n        } while (newReplyings.length);\r\n        return Array.from(users);\r\n    }\r\n\r\n    return (\r\n        <div className={\r\n            ['drop-zone', 'drop-zone--' + (loading ? 'is-loading' : 'is-dropping'),\r\n                (isOver ? 'drop-zone--is-over' : '')].join(' ')\r\n        }\r\n            onDrop={onDrop}\r\n            onDragOver={(e) => e.preventDefault()}\r\n            onDragEnter={() => setIsOver(true)}\r\n            onDragLeave={() => setIsOver(false)}\r\n        >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import React from 'react'\r\nimport { FC } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeUser } from '../store/userReduser'\r\n\r\ninterface UserItemProps {\r\n    name: string;\r\n    even: boolean;\r\n}\r\n\r\nconst UserItem: FC<UserItemProps> = ({ name, even }) => {\r\n    const dispath = useDispatch()\r\n\r\n    return (\r\n        <li className={\"user \" + (even && \"user--is-colored\")}>\r\n            <span>\r\n                {name}\r\n            </span>\r\n            <span className=\"delete\" onClick={() => dispath(removeUser(name))}></span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default UserItem\r\n","import React from 'react'\r\nimport { FC } from 'react';\r\nimport UserItem from './UserItem';\r\n\r\ninterface UserListProps {\r\n    users: string[];\r\n}\r\n\r\nconst UserList: FC<UserListProps> = ({users}) => {\r\n    return (\r\n        <div className=\"user-list__wrapper\">\r\n            {users.length\r\n                ? <ul className=\"user-list\">\r\n                    {\r\n                        users.map((user, index) =>\r\n                            <UserItem\r\n                                key={user}\r\n                                name={user}\r\n                                even={index % 2 !== 0}\r\n                            />\r\n                        )\r\n                    }\r\n                </ul>\r\n                : <h4 style={{ textAlign: \"center\" }}>Empty</h4>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList\r\n","import React, { useState } from 'react'\r\nimport './styles/App.css'\r\nimport { Context } from './context';\r\nimport Loader from './components/Loader';\r\nimport { useTypedSelector } from './hooks/useTypedSelector';\r\nimport UserList from './components/UserList';\r\n\r\nfunction App() {\r\n    const state = useTypedSelector(state => state.user)\r\n    const [fileName, setFileName] = useState<String>(\"\");\r\n\r\n    return (\r\n\r\n        <Context.Provider value={{\r\n            setFileName\r\n        }}>\r\n            <div className=\"App\">\r\n                {state.usersExist\r\n                    ? <div>\r\n                        <p className=\"file-name\">{fileName}</p>,\r\n                        <UserList users={state.users} />\r\n                    </div>\r\n                    : <Loader />\r\n                }\r\n            </div>\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default App;","import { combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { userReduser } from './userReduser';\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReduser\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools())\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}